name: Build & Push (Mono-Repo)

on:
  push:
    branches: [main, master]
    tags: ['v*']                 # ← reagiert auf Tag-Push (v1.2.3)
  release:
    types: [created, published]  # ← reagiert auf Releases im UI
  workflow_dispatch:

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/hello-world

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Erzeugt automatisch Tags & Labels aus Branch, Tag, SHA etc.
      - name: Docker meta (tags & labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          # Regeln:
          tags: |
            type=ref,event=branch         # z.B. main
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha
            # SemVer aus vX.Y.Z (bei Tags/Release)
            type=ref,event=tag
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
          labels: |
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}

      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push (multi-arch)
        uses: docker/build-push-action@v6
        with:
          context: containers/hello-world
          file: containers/hello-world/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            OWNER=${{ github.repository_owner }}
          # auf 'true' stellen, wenn du Attestations/SBOM willst (dann erscheint ggf. "unknown/unknown")
          provenance: false
          sbom: false
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Summary (which tags were pushed)
        run: |
          echo "Pushed tags:"
          echo '${{ steps.meta.outputs.tags }}' | tr ' ' '\n' | sed 's/^/- /'
